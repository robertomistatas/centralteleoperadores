rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funci√≥n auxiliar para verificar si es super admin
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == 'roberto@mistatas.com';
    }
    
    // Funci√≥n auxiliar para verificar acceso de administrador
    function isAdmin() {
      return isSuperAdmin() || (
        request.auth != null && 
        exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role in ['admin', 'super_admin']
      );
    }
    
    // Operadores - solo el due√±o puede leer/escribir, pero teleoperadoras pueden leer todos para encontrarse
    match /operators/{document} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // üî• NUEVA REGLA: Teleoperadoras pueden leer todos los operadores para encontrar su registro
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'teleoperadora'
      );
      
      // üî• NUEVA REGLA: Cualquier usuario autenticado puede leer todos los operadores
      allow read: if request.auth != null;
    }
    
    // Asignaciones - solo el due√±o puede leer/escribir, pero teleoperadoras pueden leer todas para encontrar las suyas
    match /assignments/{document} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // üî• NUEVA REGLA: Teleoperadoras pueden leer todas las asignaciones para encontrar las suyas
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'teleoperadora'
      );
      
      // üî• NUEVA REGLA: Cualquier usuario autenticado puede leer todas las asignaciones
      allow read: if request.auth != null;
    }
    
    // Datos de llamadas - Due√±o puede leer/escribir + usuarios autenticados pueden leer (para acceso al Excel del sistema)
    match /callData/{document} {
      // El due√±o del documento puede leer y escribir
      allow read, write: if request.auth != null && document == request.auth.uid;
      
      // üî• NUEVA REGLA: Usuarios autenticados pueden leer callData del sistema
      // Esto permite que teleoperadoras accedan al Excel completo para ver
      // el historial de seguimientos de sus beneficiarios asignados
      allow read: if request.auth != null;
    }
    
    // Datos de usuario - solo el due√±o puede leer/escribir
    match /userData/{document} {
      allow read, write: if request.auth != null && document == request.auth.uid;
    }
    
    // Beneficiarios - solo el due√±o puede leer/escribir
    match /beneficiaries/{document} {
      allow read, write: if request.auth != null && resource.data.creadoPor == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.creadoPor == request.auth.uid;
    }
    
    // Historial de cargas de beneficiarios - solo el due√±o puede leer/escribir
    match /beneficiaryUploads/{document} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Seguimientos peri√≥dicos - REGLAS MEJORADAS para acceso de teleoperadoras
    match /seguimientos/{document} {
      // Super admin tiene acceso total
      allow read, write, create, update, delete: if isSuperAdmin();
      
      // Admins tienen acceso total
      allow read, write, create, update, delete: if isAdmin();
      
      // El creador del seguimiento puede leer y escribir
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // üî• NUEVA REGLA CR√çTICA: Teleoperadoras pueden leer y escribir sus propios seguimientos
      allow read, write: if request.auth != null && (
        resource.data.operatorId == request.auth.uid ||
        resource.data.userId == request.auth.uid
      );
      
      // üî• REGLA PARA CREACI√ìN: Teleoperadoras pueden crear seguimientos
      allow create: if request.auth != null && (
        request.resource.data.operatorId == request.auth.uid ||
        request.resource.data.userId == request.auth.uid
      );
      
      // üî• FALLBACK: Cualquier usuario autenticado puede leer seguimientos (temporal para debugging)
      allow read: if request.auth != null;
    }
    
    // ‚úÖ NUEVAS REGLAS PARA GESTI√ìN DE USUARIOS Y PERMISOS
    
    // Perfiles de usuario - Super admin puede gestionar todos, usuarios pueden leer el suyo
    match /userProfiles/{userId} {
      // Super admin puede leer y escribir todos los perfiles
      allow read, write, create, update, delete: if isSuperAdmin();
      
      // Usuarios pueden leer su propio perfil por UID
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // üî• NUEVA REGLA: Usuarios autenticados pueden buscar su propio perfil por email
      allow read: if request.auth != null;
      
      // Admins pueden leer perfiles de usuarios bajo su jurisdicci√≥n
      allow read: if isAdmin() && request.auth != null;
    }
    
    // üî• NUEVA COLECCI√ìN: Usuarios pendientes - Para sistema de creaci√≥n inteligente
    match /pendingUsers/{userId} {
      // Super admin puede gestionar todos
      allow read, write, create, update, delete: if isSuperAdmin();
      
      // Usuarios autenticados pueden leer su propio perfil pendiente
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Usuarios autenticados pueden buscar su email en pendientes
      allow read: if request.auth != null;
      
      // Admins pueden leer pendientes
      allow read: if isAdmin() && request.auth != null;
    }
    
    // Configuraci√≥n del sistema - Solo super admin
    match /systemConfig/{document} {
      allow read, write: if isSuperAdmin();
    }
    
    // Logs de auditor√≠a - Super admin y admins pueden leer, sistema puede escribir
    match /auditLogs/{document} {
      allow read: if isAdmin();
      allow write: if isSuperAdmin();
      allow create: if request.auth != null; // Cualquier usuario autenticado puede crear logs
    }
    
    // Roles y permisos - Solo super admin puede gestionar
    match /roles/{document} {
      allow read: if request.auth != null; // Todos pueden leer roles para validaci√≥n
      allow write: if isSuperAdmin();
    }
    
    // üìä REGLAS PARA SISTEMA DE M√âTRICAS AVANZADAS
    
    // M√©tricas globales - Lectura para todos, escritura para admins
    match /metrics/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Colecciones espec√≠ficas de m√©tricas - Acceso completo para sistema de m√©tricas
    match /metricas_globales/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /metricas_teleoperadoras/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /metricas_beneficiarios/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /metricas_no_asignados/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // M√©tricas por operador - Lectura para todos, escritura para admins
    match /operatorMetrics/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // M√©tricas por beneficiario - Lectura para todos, escritura para admins  
    match /beneficiaryMetrics/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Datos raw de llamadas para m√©tricas - Lectura para todos, escritura para admins
    match /datos_llamadas/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Configuraci√≥n del sistema de m√©tricas - Solo admins
    match /systemConfig/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Logs de procesamiento - Lectura para todos, escritura para sistema
    match /processLogs/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Cualquier usuario autenticado puede escribir logs
    }
    
    // ü§ù GESTIONES COLABORATIVAS - Acceso total para todos los usuarios autenticados
    match /gestiones/{document} {
      // Lectura: Todos los usuarios autenticados pueden ver todas las gestiones
      allow read: if request.auth != null;
      
      // Creaci√≥n: Cualquier usuario autenticado puede crear gestiones
      allow create: if request.auth != null && 
        request.resource.data.creadorId == request.auth.uid &&
        request.resource.data.keys().hasAll(['titulo', 'descripcion', 'creadorId', 'creadorNombre', 'estado']);
      
      // Actualizaci√≥n: Cualquier usuario autenticado puede actualizar (para colaboraci√≥n)
      // Pero solo el creador o admin puede editar campos b√°sicos
      allow update: if request.auth != null && (
        // Cualquiera puede actualizar estado, marcar en curso, finalizar
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['estado', 'updatedAt', 'enCursoPor', 'fechaEnCurso', 'finalizadaPor', 'finalizadaNombre', 'solucion', 'fechaFinalizacion'])) ||
        // Solo creador o admin pueden editar campos b√°sicos
        (resource.data.creadorId == request.auth.uid || isAdmin())
      );
      
      // Eliminaci√≥n: Solo creador o administradores
      allow delete: if request.auth != null && (
        resource.data.creadorId == request.auth.uid || isAdmin()
      );
    }
  }
}
